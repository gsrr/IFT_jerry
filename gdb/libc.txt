
hello:     file format elf64-x86-64
hello
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400410

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags r-x
  INTERP off    0x0000000000000200 vaddr 0x0000000000400200 paddr 0x0000000000400200 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x000000000000072c memsz 0x000000000000072c flags r-x
    LOAD off    0x0000000000000730 vaddr 0x0000000000600730 paddr 0x0000000000600730 align 2**21
         filesz 0x0000000000000230 memsz 0x0000000000000238 flags rw-
 DYNAMIC off    0x0000000000000748 vaddr 0x0000000000600748 paddr 0x0000000000600748 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x000000000000021c vaddr 0x000000000040021c paddr 0x000000000040021c align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000005dc vaddr 0x00000000004005dc paddr 0x00000000004005dc align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004003a8
  FINI                 0x00000000004005b4
  INIT_ARRAY           0x0000000000600730
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600738
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400260
  STRTAB               0x00000000004002e0
  SYMTAB               0x0000000000400280
  STRSZ                0x000000000000003f
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000600920
  PLTRELSZ             0x0000000000000048
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000400360
  RELA                 0x0000000000400348
  RELASZ               0x0000000000000018
  RELAENT              0x0000000000000018
  VERNEED              0x0000000000400328
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000400320

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400200  0000000000400200  00000200  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  000000000040021c  000000000040021c  0000021c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  000000000040023c  000000000040023c  0000023c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400260  0000000000400260  00000260  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000060  0000000000400280  0000000000400280  00000280  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000003f  00000000004002e0  00000000004002e0  000002e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000008  0000000000400320  0000000000400320  00000320  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000400328  0000000000400328  00000328  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000018  0000000000400348  0000000000400348  00000348  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000048  0000000000400360  0000000000400360  00000360  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001a  00000000004003a8  00000000004003a8  000003a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000040  00000000004003d0  00000000004003d0  000003d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001a2  0000000000400410  0000000000400410  00000410  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000004005b4  00000000004005b4  000005b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000001c  00000000004005c0  00000000004005c0  000005c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  00000000004005dc  00000000004005dc  000005dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000114  0000000000400618  0000000000400618  00000618  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600730  0000000000600730  00000730  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600738  0000000000600738  00000738  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600740  0000000000600740  00000740  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600748  0000000000600748  00000748  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000008  0000000000600918  0000000000600918  00000918  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000030  0000000000600920  0000000000600920  00000920  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000600950  0000000000600950  00000950  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000008  0000000000600960  0000000000600960  00000960  2**0
                  ALLOC
 25 .comment      00000039  0000000000000000  0000000000000000  00000960  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000400200 l    d  .interp	0000000000000000              .interp
000000000040021c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
000000000040023c l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400260 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000400280 l    d  .dynsym	0000000000000000              .dynsym
00000000004002e0 l    d  .dynstr	0000000000000000              .dynstr
0000000000400320 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400328 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400348 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400360 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004003a8 l    d  .init	0000000000000000              .init
00000000004003d0 l    d  .plt	0000000000000000              .plt
0000000000400410 l    d  .text	0000000000000000              .text
00000000004005b4 l    d  .fini	0000000000000000              .fini
00000000004005c0 l    d  .rodata	0000000000000000              .rodata
00000000004005dc l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400618 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600730 l    d  .init_array	0000000000000000              .init_array
0000000000600738 l    d  .fini_array	0000000000000000              .fini_array
0000000000600740 l    d  .jcr	0000000000000000              .jcr
0000000000600748 l    d  .dynamic	0000000000000000              .dynamic
0000000000600918 l    d  .got	0000000000000000              .got
0000000000600920 l    d  .got.plt	0000000000000000              .got.plt
0000000000600950 l    d  .data	0000000000000000              .data
0000000000600960 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600740 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400440 l     F .text	0000000000000000              deregister_tm_clones
0000000000400480 l     F .text	0000000000000000              register_tm_clones
00000000004004c0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000600960 l     O .bss	0000000000000001              completed.6661
0000000000600738 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004004e0 l     F .text	0000000000000000              frame_dummy
0000000000600730 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              hello.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400728 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600740 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600738 l       .init_array	0000000000000000              __init_array_end
0000000000600748 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600730 l       .init_array	0000000000000000              __init_array_start
0000000000600920 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000004005b0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000600950  w      .data	0000000000000000              data_start
0000000000600960 g       .data	0000000000000000              _edata
00000000004005b4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000400506 g     F .text	0000000000000024              print
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000600950 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000600958 g     O .data	0000000000000000              .hidden __dso_handle
00000000004005c0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400540 g     F .text	0000000000000065              __libc_csu_init
0000000000600968 g       .bss	0000000000000000              _end
0000000000400410 g     F .text	0000000000000000              _start
0000000000600960 g       .bss	0000000000000000              __bss_start
000000000040052a g     F .text	0000000000000015              main
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000600960 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
00000000004003a8 g     F .init	0000000000000000              _init



Disassembly of section .init:

00000000004003a8 <_init>:
  4003a8:	48 83 ec 08          	sub    $0x8,%rsp
  4003ac:	48 8b 05 65 05 20 00 	mov    0x200565(%rip),%rax        # 600918 <_DYNAMIC+0x1d0>
  4003b3:	48 85 c0             	test   %rax,%rax
  4003b6:	74 05                	je     4003bd <_init+0x15>
  4003b8:	e8 43 00 00 00       	callq  400400 <__gmon_start__@plt>
  4003bd:	48 83 c4 08          	add    $0x8,%rsp
  4003c1:	c3                   	retq   

Disassembly of section .plt:

00000000004003d0 <printf@plt-0x10>:
  4003d0:	ff 35 52 05 20 00    	pushq  0x200552(%rip)        # 600928 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 54 05 20 00    	jmpq   *0x200554(%rip)        # 600930 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003e0 <printf@plt>:
  4003e0:	ff 25 52 05 20 00    	jmpq   *0x200552(%rip)        # 600938 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003e6:	68 00 00 00 00       	pushq  $0x0
  4003eb:	e9 e0 ff ff ff       	jmpq   4003d0 <_init+0x28>

00000000004003f0 <__libc_start_main@plt>:
  4003f0:	ff 25 4a 05 20 00    	jmpq   *0x20054a(%rip)        # 600940 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003f6:	68 01 00 00 00       	pushq  $0x1
  4003fb:	e9 d0 ff ff ff       	jmpq   4003d0 <_init+0x28>

0000000000400400 <__gmon_start__@plt>:
  400400:	ff 25 42 05 20 00    	jmpq   *0x200542(%rip)        # 600948 <_GLOBAL_OFFSET_TABLE_+0x28>
  400406:	68 02 00 00 00       	pushq  $0x2
  40040b:	e9 c0 ff ff ff       	jmpq   4003d0 <_init+0x28>

Disassembly of section .text:

0000000000400410 <_start>:
  400410:	31 ed                	xor    %ebp,%ebp
  400412:	49 89 d1             	mov    %rdx,%r9
  400415:	5e                   	pop    %rsi
  400416:	48 89 e2             	mov    %rsp,%rdx
  400419:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40041d:	50                   	push   %rax
  40041e:	54                   	push   %rsp
  40041f:	49 c7 c0 b0 05 40 00 	mov    $0x4005b0,%r8
  400426:	48 c7 c1 40 05 40 00 	mov    $0x400540,%rcx
  40042d:	48 c7 c7 2a 05 40 00 	mov    $0x40052a,%rdi
  400434:	e8 b7 ff ff ff       	callq  4003f0 <__libc_start_main@plt>
  400439:	f4                   	hlt    
  40043a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400440 <deregister_tm_clones>:
  400440:	b8 67 09 60 00       	mov    $0x600967,%eax
  400445:	55                   	push   %rbp
  400446:	48 2d 60 09 60 00    	sub    $0x600960,%rax
  40044c:	48 83 f8 0e          	cmp    $0xe,%rax
  400450:	48 89 e5             	mov    %rsp,%rbp
  400453:	76 1b                	jbe    400470 <deregister_tm_clones+0x30>
  400455:	b8 00 00 00 00       	mov    $0x0,%eax
  40045a:	48 85 c0             	test   %rax,%rax
  40045d:	74 11                	je     400470 <deregister_tm_clones+0x30>
  40045f:	5d                   	pop    %rbp
  400460:	bf 60 09 60 00       	mov    $0x600960,%edi
  400465:	ff e0                	jmpq   *%rax
  400467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40046e:	00 00 
  400470:	5d                   	pop    %rbp
  400471:	c3                   	retq   
  400472:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  400479:	1f 84 00 00 00 00 00 

0000000000400480 <register_tm_clones>:
  400480:	be 60 09 60 00       	mov    $0x600960,%esi
  400485:	55                   	push   %rbp
  400486:	48 81 ee 60 09 60 00 	sub    $0x600960,%rsi
  40048d:	48 c1 fe 03          	sar    $0x3,%rsi
  400491:	48 89 e5             	mov    %rsp,%rbp
  400494:	48 89 f0             	mov    %rsi,%rax
  400497:	48 c1 e8 3f          	shr    $0x3f,%rax
  40049b:	48 01 c6             	add    %rax,%rsi
  40049e:	48 d1 fe             	sar    %rsi
  4004a1:	74 15                	je     4004b8 <register_tm_clones+0x38>
  4004a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004a8:	48 85 c0             	test   %rax,%rax
  4004ab:	74 0b                	je     4004b8 <register_tm_clones+0x38>
  4004ad:	5d                   	pop    %rbp
  4004ae:	bf 60 09 60 00       	mov    $0x600960,%edi
  4004b3:	ff e0                	jmpq   *%rax
  4004b5:	0f 1f 00             	nopl   (%rax)
  4004b8:	5d                   	pop    %rbp
  4004b9:	c3                   	retq   
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <__do_global_dtors_aux>:
  4004c0:	80 3d 99 04 20 00 00 	cmpb   $0x0,0x200499(%rip)        # 600960 <__TMC_END__>
  4004c7:	75 11                	jne    4004da <__do_global_dtors_aux+0x1a>
  4004c9:	55                   	push   %rbp
  4004ca:	48 89 e5             	mov    %rsp,%rbp
  4004cd:	e8 6e ff ff ff       	callq  400440 <deregister_tm_clones>
  4004d2:	5d                   	pop    %rbp
  4004d3:	c6 05 86 04 20 00 01 	movb   $0x1,0x200486(%rip)        # 600960 <__TMC_END__>
  4004da:	f3 c3                	repz retq 
  4004dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004e0 <frame_dummy>:
  4004e0:	bf 40 07 60 00       	mov    $0x600740,%edi
  4004e5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004e9:	75 05                	jne    4004f0 <frame_dummy+0x10>
  4004eb:	eb 93                	jmp    400480 <register_tm_clones>
  4004ed:	0f 1f 00             	nopl   (%rax)
  4004f0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004f5:	48 85 c0             	test   %rax,%rax
  4004f8:	74 f1                	je     4004eb <frame_dummy+0xb>
  4004fa:	55                   	push   %rbp
  4004fb:	48 89 e5             	mov    %rsp,%rbp
  4004fe:	ff d0                	callq  *%rax
  400500:	5d                   	pop    %rbp
  400501:	e9 7a ff ff ff       	jmpq   400480 <register_tm_clones>

0000000000400506 <print>:
  400506:	55                   	push   %rbp
  400507:	48 89 e5             	mov    %rsp,%rbp
  40050a:	48 83 ec 10          	sub    $0x10,%rsp
  40050e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400516:	48 89 c6             	mov    %rax,%rsi
  400519:	bf c4 05 40 00       	mov    $0x4005c4,%edi
  40051e:	b8 00 00 00 00       	mov    $0x0,%eax
  400523:	e8 b8 fe ff ff       	callq  4003e0 <printf@plt>
  400528:	c9                   	leaveq 
  400529:	c3                   	retq   

000000000040052a <main>:
  40052a:	55                   	push   %rbp
  40052b:	48 89 e5             	mov    %rsp,%rbp
  40052e:	bf c7 05 40 00       	mov    $0x4005c7,%edi
  400533:	e8 ce ff ff ff       	callq  400506 <print>
  400538:	b8 00 00 00 00       	mov    $0x0,%eax
  40053d:	5d                   	pop    %rbp
  40053e:	c3                   	retq   
  40053f:	90                   	nop

0000000000400540 <__libc_csu_init>:
  400540:	41 57                	push   %r15
  400542:	41 89 ff             	mov    %edi,%r15d
  400545:	41 56                	push   %r14
  400547:	49 89 f6             	mov    %rsi,%r14
  40054a:	41 55                	push   %r13
  40054c:	49 89 d5             	mov    %rdx,%r13
  40054f:	41 54                	push   %r12
  400551:	4c 8d 25 d8 01 20 00 	lea    0x2001d8(%rip),%r12        # 600730 <__frame_dummy_init_array_entry>
  400558:	55                   	push   %rbp
  400559:	48 8d 2d d8 01 20 00 	lea    0x2001d8(%rip),%rbp        # 600738 <__init_array_end>
  400560:	53                   	push   %rbx
  400561:	4c 29 e5             	sub    %r12,%rbp
  400564:	31 db                	xor    %ebx,%ebx
  400566:	48 c1 fd 03          	sar    $0x3,%rbp
  40056a:	48 83 ec 08          	sub    $0x8,%rsp
  40056e:	e8 35 fe ff ff       	callq  4003a8 <_init>
  400573:	48 85 ed             	test   %rbp,%rbp
  400576:	74 1e                	je     400596 <__libc_csu_init+0x56>
  400578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40057f:	00 
  400580:	4c 89 ea             	mov    %r13,%rdx
  400583:	4c 89 f6             	mov    %r14,%rsi
  400586:	44 89 ff             	mov    %r15d,%edi
  400589:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40058d:	48 83 c3 01          	add    $0x1,%rbx
  400591:	48 39 eb             	cmp    %rbp,%rbx
  400594:	75 ea                	jne    400580 <__libc_csu_init+0x40>
  400596:	48 83 c4 08          	add    $0x8,%rsp
  40059a:	5b                   	pop    %rbx
  40059b:	5d                   	pop    %rbp
  40059c:	41 5c                	pop    %r12
  40059e:	41 5d                	pop    %r13
  4005a0:	41 5e                	pop    %r14
  4005a2:	41 5f                	pop    %r15
  4005a4:	c3                   	retq   
  4005a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4005ac:	00 00 00 00 

00000000004005b0 <__libc_csu_fini>:
  4005b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005b4 <_fini>:
  4005b4:	48 83 ec 08          	sub    $0x8,%rsp
  4005b8:	48 83 c4 08          	add    $0x8,%rsp
  4005bc:	c3                   	retq   
