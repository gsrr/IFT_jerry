python-vim [[http://vimdoc.sourceforge.net/htmldoc/if_pyth.html#python-vim]]

vim - pass argument to python script
<file>
:py import sys
:py sys.argv = ["foo", "bar"]
:pyfile mypythonscript.py

" pass argument with variable
function! Markdown2HTML()
        python import sys; import vim; sys.argv = [vim.eval("a:arg"), "bar"]
	pyfile markdown2html.py
endfunc

</file>
vim - get input from user
<file>
function! Demo()
  let curline = getline('.')
  call inputsave()
  let name = input('Enter name: ')
  call inputrestore()
  call setline('.', curline . ' ' . name)
endfunction
</file>
vim - execute by python script
<file>
if !has('python')
	finish
endif
 
function! Markdown2HTML()
	pyfile markdown2html.py
endfunc
 
command! MKD2HTML call Markdown2HTML()
</file>
[[http://www.terminally-incoherent.com/blog/2013/05/06/vriting-vim-plugins-in-python/]]
vim - redraw screen
<file>
:redraw!
</file>
vim - loop
<file>
:let c = 0
:for i in [1, 2, 3, 4]
:  let c += i
:endfor
:echom c

:let c = 1
:let total = 0
:while c <= 4
:  let total += c
:  let c += 1
:endwhile
:echom total
</file>
[[http://learnvimscriptthehardway.stevelosh.com/chapters/36.html]]
vim -send function by user command
<file>
command! -nargs=1 MyCommand call s:MyFunc(<f-args>)
</file>

vim - if else
<file>
:if 10 == 11
:    echom "first"
:elseif 10 == 10
:    echom "second"
:endif

:if "foo" == "bar"
:    echom "one"
:elseif "foo" == "foo"
:    echom "two"
:endif
[[http://learnvimscriptthehardway.stevelosh.com/chapters/22.html]]
</file>
vim - write a function
<file>
:function DisplayName(name)
:  echom "Hello!  My name is:"
:  echom a:name
:endfunction
</file>
vim - run the function
<file>
:call DisplayName("Your Name")
</file>
[[http://learnvimscriptthehardway.stevelosh.com/chapters/24.html]]