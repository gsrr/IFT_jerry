a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1495519009;s:8:"modified";i:1495615870;}s:11:"last_change";a:8:{s:4:"date";i:1495615870;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"E";s:2:"id";s:26:"algorithm:algorithms:tools";s:4:"user";s:0:"";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:22;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:519:"# itertools
def permutations(arr):
    # disadvantage : 暴力法, 速度慢, 需等到全部東西都回傳才可以進行處理
    import itertools
    return itertools.permutations(arr)

# euclidean distance
def euclidean(v1, v2):
    from scipy.spatial import distance
    return distance.euclidean(v1, v2)

def euclidean(v1, v2):
    return sqrt(sum( (x - y)**2 for x, y in zip(v1, v2)))
   
# basic algorithm
1. stack & queue
2. binary search tree
3. bfs & dfs
4. permutations
5. subset
6. binary combinations…";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:2:{s:7:"created";i:1495519009;s:8:"modified";i:1495615870;}s:11:"last_change";a:8:{s:4:"date";i:1495615870;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"E";s:2:"id";s:26:"algorithm:algorithms:tools";s:4:"user";s:0:"";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:22;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}