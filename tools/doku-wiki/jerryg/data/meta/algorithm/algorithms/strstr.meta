a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1494903637;s:8:"modified";i:1494903806;}s:11:"last_change";a:8:{s:4:"date";i:1494903806;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"E";s:2:"id";s:27:"algorithm:algorithms:strstr";s:4:"user";s:0:"";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:6;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:503:"def issub(haystack, needle, i):
    for j in xrange(len(needle)):
        if haystack[i + j] != needle[j]:
            return False
    return True
    
class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if needle == "":
            return 0
        
        s = 0
        e = len(haystack) - len(needle) + 1
        while s < e:
            if haystack[s] == needle[0]:
          â€¦";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:2:{s:7:"created";i:1494903637;s:8:"modified";i:1494903806;}s:11:"last_change";a:8:{s:4:"date";i:1494903806;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"E";s:2:"id";s:27:"algorithm:algorithms:strstr";s:4:"user";s:0:"";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:6;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}