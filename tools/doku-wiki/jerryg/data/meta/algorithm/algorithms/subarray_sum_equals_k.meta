a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1493591014;s:8:"modified";i:1493591014;}s:11:"last_change";a:8:{s:4:"date";i:1493591014;s:2:"ip";s:14:"10.141.141.113";s:4:"type";s:1:"C";s:2:"id";s:42:"algorithm:algorithms:subarray_sum_equals_k";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:424;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:379:"class Solution(object):
    def subarraySum(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        dic = {0 : 1}
        s = 0
        ret = 0
        for i in xrange(len(nums)):
            s += nums[i]
            d = s - k
            ret += dic.get(d, 0)
            dic[s] = dic.get(s,0) + 1
        return ret";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1493591014;}s:11:"last_change";a:8:{s:4:"date";i:1493591014;s:2:"ip";s:14:"10.141.141.113";s:4:"type";s:1:"C";s:2:"id";s:42:"algorithm:algorithms:subarray_sum_equals_k";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:424;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}