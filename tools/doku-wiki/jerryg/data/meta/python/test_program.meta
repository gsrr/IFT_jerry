a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1528961695;s:8:"modified";i:1528961695;}s:11:"last_change";a:8:{s:4:"date";i:1528961695;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"C";s:2:"id";s:19:"python:test_program";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:573;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:28:"Deadlock of subprocess.Popen";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:27:"deadlock_of_subprocesspopen";s:5:"title";s:28:"Deadlock of subprocess.Popen";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:503:"Deadlock of subprocess.Popen


# Root cause
The parent process communicate with subprocess through pipe, 
and the pipe buffer will full if parent process doesn't read data from pipe.


# execution
python test.py

# test.py
import subprocess
import time

proc = subprocess.Popen("bash test.sh", shell = True, stdout = subprocess.PIPE)
while True:
        line = proc.stdout.readline()
        print line
        time.sleep(1)
        
# test.sh
cnt=0
while true
do
        sleep 0.1
        echo "$cntâ€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1528961695;}s:11:"last_change";a:8:{s:4:"date";i:1528961695;s:2:"ip";s:12:"172.27.12.71";s:4:"type";s:1:"C";s:2:"id";s:19:"python:test_program";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:573;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}