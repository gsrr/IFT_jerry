
<h1 class="sectionedit1" id="basic_of_process">Basic of Process</h1>
<div class="level1">
<pre class="file">Q7 : thread is running in the same cpu core?
Ans :
No, threads can run in different cpu cores. 

Q6 : cpu core of process?
Ans :
1. taskset -c -p &lt;pid&gt;
2. ps -o pid,psr,comm -p &lt;pid&gt;
4. ps -aTF
3. top
The top command can also show the CPU assigned to a given process. First, launch top command with &quot;p&quot; option. 
Then press &#039;f&#039; key, and add &quot;Last used CPU&quot; column to the display. 
The currently used CPU core will appear under &quot;P&quot; (or &quot;PSR&quot;) column.

Q5 : Format of &quot;ps aux&quot;?
Ans : 

PID 
%CPU --&gt; Percentage of CPU used by the process.
%MEM --&gt; Percentage of memory used by the process.
VSZ --&gt; virtual size in kilobytes
RSS --&gt; real memory size or resident set size in 1024 byte units
TTY         
STAT --&gt; the process state code
START   
TIME      
COMMAND 
(The process state codes include D, uninterruptable sleep; N, low priority; R, runnable (on run queue); S, sleeping; T, traced or stopped; Z, defunct (zombie).)

Q4 : Dump memory from a process?
Ans :
# dump memory
1. cat /proc/[pid]/maps
00621000-00622000 rw-p 00021000 08:01 592398 /usr/libexec/dovecot/pop3-login
...
2. gdb --pid [pid]
3. (gdb) dump memory /root/output 0x00621000 0x00622000

# generate a core file
1. gcore pid
2. gdb /usr/bin/python core.pid

Q3 : memory of a process?
1. top -p $pid ; press &quot;e&quot; for different memory units
2. ps aux --sort -rss
3. pmap &lt;pid&gt;

rss -&gt; The real memory (resident set) size of the process (in 1024 by units).
%mem  -&gt; The percentage of real memory used by this process.

Q2 : thread of a process?
Ans :
1. ps -T -p $pid
2. top -H -p $pid

Q1 : process 包含了哪些資訊?
Ans : 
1. open fd of a process : ls -l /proc/&lt;pid&gt;/fd</pre>

</div>
