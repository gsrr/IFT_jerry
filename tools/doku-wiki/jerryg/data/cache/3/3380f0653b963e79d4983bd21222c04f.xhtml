
<h1 class="sectionedit1" id="faq">FAQ</h1>
<div class="level1">
<pre class="file">Q1 : 如何驗證ioctl download?
Ans:
比對xfs的隱藏資料夾與fuse的資料夾, 就可以判斷出來, 執行download後, 隱藏資料夾照理會多出檔案.

Q2 : 如何驗證ioctl state?
Ans:
比對xfs的隱藏資料夾與fuse的資料夾, 就可以判斷出來, 若xfs裡面不存在, 則應該回覆0, 若xfs裡面存在, 則會回覆1.
</pre>

</div>
<!-- EDIT1 SECTION "FAQ" [1-384] -->
<h1 class="sectionedit2" id="ioctl_example">ioctl example</h1>
<div class="level1">
<pre class="file">#include &lt;linux/ioctl.h&gt;
#include &lt;unistd.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#define YAS3FS_IOC_CACHE_STATE      _IOR(&#039;F&#039;, 1, unsigned int)
#define YAS3FS_IOC_DOWNLOAD         _IOWR(&#039;F&#039;, 2, yas3fs_download_t)
#define YAS3FS_IOC_ADJUST_SIZE      _IOW(&#039;F&#039;, 3, size_t)


#define YAS3FS_CACHE_SYNC           (1 &lt;&lt; 0)


#define BUF_SIZE 8192

typedef struct yas3fs_io_range {
                off_t offset;
                size_t count;
} yas3fs_io_range_t;

typedef struct yas3fs_download {
                yas3fs_io_range_t io_range;
                unsigned int state;
                char resv[4];
} yas3fs_download_t;


int test_ioctl_download(char* fp)
{
                int fd = open(fp, O_RDONLY);
                void *buf = NULL;
                int ret;

                yas3fs_download_t *download = malloc(sizeof(yas3fs_download_t));
                if (download == NULL)
                                return -1;

                download-&gt;state = 0;
                download-&gt;io_range.offset = 0;
                download-&gt;io_range.count = 0;
                buf = (void *)download;
                ret = ioctl(fd, YAS3FS_IOC_DOWNLOAD, buf);
                if(ret &lt; 0)
                {
                                printf(&quot;ret &lt; 0\n&quot;);
                }
                else
                {
                                printf(&quot;ret &gt; 0\n&quot;);
                                unsigned int *statep = &amp;(((yas3fs_download_t *)buf)-&gt;state);
                                printf(&quot;download state:%x\n&quot;, *statep &amp; YAS3FS_CACHE_SYNC);
                }
                free(buf);
}

void test_ioctl_state(char* fp)
{
                unsigned int cstate = 0;
                int fd = open(fp, O_RDONLY);
                int ret = ioctl(fd, YAS3FS_IOC_CACHE_STATE, &amp;cstate);
                printf(&quot;state ret:%d\n&quot;, cstate);
}

int test_ioctl_adjust(char* fp)
{
        ssize_t ret_in, ret_out;
        int fr = open(&quot;./iofile&quot;, O_RDONLY);
        int fw = open(fp, O_WRONLY | O_CREAT);
        char buffer[BUF_SIZE];
        ssize_t offset = 0;
        while((ret_in = read (fr, &amp;buffer, BUF_SIZE)) &gt; 0)
        {
                        //ret_out = write (fw, &amp;buffer, (ssize_t) ret_in);
                        offset += ret_in;
                        printf(&quot;offset:%d, ret_out:%d\n&quot;, offset, ret_in);
                        int ret = ioctl(fw, YAS3FS_IOC_ADJUST_SIZE, &amp;offset);
        }
}


int test_ioctl_xfswrite(char* fp)
{
        ssize_t ret_in, ret_out;
        int fr = open(&quot;./iofile&quot;, O_RDONLY);
        int fw = open(fp, O_WRONLY | O_CREAT);
        char buffer[BUF_SIZE];
        while((ret_in = read (fr, &amp;buffer, BUF_SIZE)) &gt; 0)
        {
                        ret_out = write (fw, &amp;buffer, (ssize_t) ret_in);
                        if(ret_out != ret_in){
                                        /* Write error */
                                        perror(&quot;write&quot;);
                                        return 4;
                        }
        }
}

int main(int argc, char* argv[])
{
                if (strcmp(&quot;state&quot;, argv[1]) == 0)
                {
                        test_ioctl_state(argv[2]);
                }
                else if (strcmp(&quot;download&quot;, argv[1]) == 0)
                {
                                test_ioctl_download(argv[2]);
                }
                else if (strcmp(&quot;adjust&quot;, argv[1]) == 0)
                {
                                test_ioctl_adjust(argv[2]);
                }
                else if (strcmp(&quot;xfswrite&quot;, argv[1]) == 0)
                {
                                test_ioctl_xfswrite(argv[2]);
                }
                return 0;
}</pre>

</div>
<!-- EDIT2 SECTION "ioctl example" [385-] -->