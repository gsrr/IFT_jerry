
<h1 class="sectionedit1" id="faq">FAQ</h1>
<div class="level1">
<pre class="file">Q : commands of solaris
Ans:
# change acl of index 4
1. chmod A4=owner@:read_data/write_data:allow test
# remove index 6 entry
2. chmod A6- test
3. ls -v file
ref : https://docs.oracle.com/cd/E18752_01/html/819-5461/gbchf.html

# add a acl entry for specific user
chmod A+user:aa:read_data/write_data:allow test

Q : security issue:
Ans :
remove root password --&gt; passed -d root</pre>

</div>
<!-- EDIT1 SECTION "FAQ" [1-413] -->
<h1 class="sectionedit2" id="sync_acl_with_eonnas">Sync Acl with EonNAS</h1>
<div class="level1">
<pre class="file"># modified files:
1. acl.c
2. options.c

-------------------------------------
Q10:
test case #1:
1. backup file時, file與folder的acl都要可以過去.
2. backup file時, 最上層folder的acl不可以被更改.

Ans:

-------------------------------------

Q09:
inherit acl也要跟著過去. (fd --&gt; f: file inherit, d: directory inherit)

Ans:
1. fd = 3, f=1, d=2
2. default acl how to set?
--&gt; mode == 0 , flag=0x1f, 且user_obj, group_obj, mask_obj, other_obj都要設定.
3. owner, group and everyone
3.1 owner@ : flags:1000
3.2 group@ : flags:2000
3.3 everyone@ : flags:4000
-------------------------------------
Q8:
sync過來的acl entry, 會多一個mask entry, 且mask entry會與group同步, 導致其他user/group的acl會被受限.

Ans:
1. The default behavior of linux system:
If an ACL contains named user or named group entries, and no mask entry exists, a mask entry containing the same permissions as the group entry is created.
2. solution
2.1 在最後執行一次setfacl --recursive -m m:rwx /Pool-1/rsync_test
2.2 
終於找到了, 不是在mask_obj控制的, 而是由file-&gt;mode來控制mask的權限.
但group與mask還是會同步, 所以需要在group_obj 與mask_obj再進行設定.


-------------------------------------
Q7:
設定domain user的acl entry時, user的entry會變成group entry

Ans:
看來是因為跟順序性有關, 若前面已經有group的entry, 那後面都會變成group entry.

-------------------------------------

Q6:
rsync 最後面都會有error message:
rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1518) [generator=3.0.9]

Ans:
這是因為我用以下function來印訊息的關係.
rprintf(FERROR_XFER, &quot;type=%d, flags=%d, has_name: %d, %d, is user=%d, count=%d\n&quot;,type, flags,has_name, id, access, i);


-------------------------------------

Q5:
我發現會區分不出user 還是group, 對我來說只有讀到id

Ans:
1. 可以透過zfs-acls的結構來判別, 但source code需要加入zfs-acls的參數.
2. 在flag的變數中, 可以判斷出是user還是group
3. https://blogs.oracle.com/lisaweek/entry/nfsv4_and_zfs_acls

-------------------------------------
Q4:
acl entry裡面若有group id的話?

Ans:
1. 讀取來跟user一樣, 都可以讀到id與access.

-------------------------------------
Q3:
deny的acl entry要如何忽略掉?

Ans:

-------------------------------------
Q1: 
owner@ , group@, everyone@ 的uid讀取到是-1, 會造成set acl fail:
rsync: set_acl: sys_acl_set_file(test, ACL_TYPE_ACCESS): Invalid argument (22)

Ans:
一開始會讀進所有的acl entry,  若entry的id為-1時, 就不存起來.


Q2:
不複製最上面一層folder的acl.

Ans:
rsync -aA admin@172.27.121.54::test/* ./*



acl mapping (hex format)
r --&gt; 4 --&gt; r (80000004), rx(80000005)
w --&gt; 8 
rw --&gt; c --&gt; rwx (80000007)
p --&gt; 10
x --&gt; 80 
d --&gt; 40000
rd --&gt; 40004
rwp --&gt; 1c


[error message]
[root@nas_8686288_b ~]# rsync -aA admin@172.27.121.54::test/ /root/test123/
Password:
recv_acl_access: value out of range: 100116
rsync error: error in rsync protocol data stream (code 12) at acls.c(958) [Receiver=3.0.9]

1. user@, group@, everyone@ 可以忽略掉, 因為會靠-o進行設定.
2. 

# first target
可以看得出來各個acl的資訊嗎? uid and acl permission

#define XMIT_USER_OBJ (1&lt;&lt;0)
#define XMIT_GROUP_OBJ (1&lt;&lt;1)
#define XMIT_MASK_OBJ (1&lt;&lt;2)
#define XMIT_OTHER_OBJ (1&lt;&lt;3)
#define XMIT_NAME_LIST (1&lt;&lt;4)
--&gt; /* Flags used to indicate what items are being transmitted for an entry. */



# sync acl from EonNAS to GS
[EonNAS]
--&gt;send_rsync_acl

--&gt; recv_rsync_acl , 每個file 呼叫一次, get file acl
1. 在裡面會讀到 acl entry :
gdb) print *duo_item
$41 = {racl = {names = {idas = 0x5555557d36c0, count = 1}, user_obj = 128 &#039;\200&#039;, group_obj = 4 &#039;\004&#039;,
    mask_obj = 128 &#039;\200&#039;, other_obj = 128 &#039;\200&#039;}, sacl = 0x0}
(gdb) print *duo_item.racl.names.idas
$42 = {id = 1001, access = 2147483655}
--&gt; group_obj有值是因為mask的關係, 當有mask時, group的角色會被mask取代掉.


#empty rsync acl
$44 = {racl = {names = {idas = 0x0, count = 0}, user_obj = 128 &#039;\200&#039;, group_obj = 128 &#039;\200&#039;, mask_obj = 0 &#039;\000&#039;,
    other_obj = 0 &#039;\000&#039;}, sacl = 0x0}
--&gt; 這裡的user_obj與group_obj, other_obj都沒有值, 因為這三個value都是從-o進行設定.


--&gt; recv_ida_entries
1. 從這裡似乎會讀到各個entry的資訊.
(gdb) print *(duo_item.racl.names.idas)
$55 = {id = 1001, access = 2147483654}
2147483655 --&gt; 0x80000007 --&gt; rwx
2147483654 --&gt; 0x80000006 --&gt; rw

# 2個user
(gdb) print $72.racl.names
$77 = {idas = 0x5555557d36c0, count = 2}
(gdb) print *($72.racl.names.idas)
$81 = {id = 1000, access = 2147483654}
(gdb) print *($72.racl.names.idas + 1)
$82 = {id = 1001, access = 2147483654}

--&gt; function: recv_acl_access , error message: recv_acl_access: value out of range: 1e



[Mapping between EonNAS and GS]
EonNAS:
-rw-------  1 500      100         7294 Dec 29  2008 0.gif
              user:root:rw-p----------:-------:allow
               user:500:rw-p----------:-------:allow
              user:1004:r--p----------:-------:allow
             user:65534:--------------:-------:allow
             
GS:
(gdb) print *($4.racl.names.idas + 0)
$13 = {id = 0, access = 2147483655} --&gt; root, 0x80000007, rwx
(gdb) print *($4.racl.names.idas + 1)
$10 = {id = 500, access = 2147483655} --&gt; user 500, 0x80000007, rwx
(gdb) print *($4.racl.names.idas + 2)
$11 = {id = 1004, access = 2147483653} --&gt; user 1004, 0x80000005, rx
(gdb) print *($4.racl.names.idas + 3)
$12 = {id = 65534, access = 2147483648} --&gt; user 65534, 0x80000000, ---



EonNAS:
-rw-rw-rw-  1 root     root           0 Apr 22 10:10 test
              everyone@:--------------:-------:deny
                 group@:--------------:-------:deny
                 owner@:--------------:-------:deny
              everyone@:--------------:-------:deny
                 owner@:rw------------:-------:allow
                 group@:rw------------:-------:allow
              everyone@:rw------------:-------:allow
              
GS:
$44 = {racl = {names = {idas = 0x5555557d36c0, count = 7}, user_obj = 128 &#039;\200&#039;, group_obj = 128 &#039;\200&#039;,
    mask_obj = 6 &#039;\006&#039;, other_obj = 128 &#039;\200&#039;}, sacl = 0x0}
(gdb) print *$43.racl
Structure has no component named operator*.
(gdb) print $43.racl.names.idas
$45 = (id_access *) 0x5555557d36c0
(gdb) print *($43.racl.names.idas)
$46 = {id = 4294967295, access = 0}
(gdb) print *($43.racl.names.idas + 1)
$47 = {id = 4294967295, access = 0}
(gdb) print *($43.racl.names.idas + 2)
$48 = {id = 4294967295, access = 0}
(gdb) print *($43.racl.names.idas + 3)
$49 = {id = 4294967295, access = 0}
(gdb) print *($43.racl.names.idas + 4)
$50 = {id = 4294967295, access = 3}
(gdb) print *($43.racl.names.idas + 5)
$51 = {id = 4294967295, access = 3}
(gdb) print *($43.racl.names.idas + 6)
$52 = {id = 4294967295, access = 3}


[root@nas_8661593_a test123]# rsync -aA admin@172.27.121.54::test /root/test123/

Password:
recv_acl_access: value out of range: 1e01bf
rsync error: error in rsync protocol data stream (code 12) at acls.c(958) [Receiver=3.0.9]
----------------------------------------------------------------------------------------------


Source Side:
[root@nas_8744965_a test]# getfacl 01.gif
# file: 01.gif
# owner: 500
# group: users
user::rwx
user:root:rwx
user:500:rwx
user:1004:r-x
user:nfsnobody:---
group::rwx
mask::rwx
other::rwx


Command : rsync -aA /Pool-1/Volume_1/share1/test/ admin@172.27.121.54:/Pool-1/test/
root@EonNAS_1510:/Pool-1/test# ls -lV 01.gif
-rw-------  1 500      100         5344 Dec 29  2008 01.gif
              user:root:rw-p----------:-------:allow
               user:500:rw-p----------:-------:allow
              user:1004:r--p----------:-------:allow
             user:65534:--------------:-------:allow
            user:100001:rw-p----------:-------:allow

Command : rsync -aA /Pool-1/Volume_1/share1/test/ admin@172.27.121.54::test
root@EonNAS_1510:/Pool-1/test# ls -lv 01.gif
-rw-------  1 500      100         5344 Dec 29  2008 01.gif
     0:user:root:read_data/write_data/append_data:allow
     1:user:500:read_data/write_data/append_data:allow
     2:user:1004:read_data/append_data:allow
     3:user:65534::allow
     4:user:100001:read_data/write_data/append_data:allow
     
# 使用一般user
Command : rsync -aA /Pool-1/Volume_1/share1/test/ aa@172.27.121.54:/Pool-1/test123/
rsync: recv_generator: mkdir &quot;/Pool-1/test123/.syncing_db&quot; failed: Permission denied (13)
*** Skipping any contents from this failed directory ***
rsync: recv_generator: mkdir &quot;/Pool-1/test123/@Recycle&quot; failed: Permission denied (13)
*** Skipping any contents from this failed directory ***
rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1052) [sender=3.0.9]
第一層的ACL會被改掉, 導致一般user沒有權限進行修改
Source Side:
[root@gsnas_a share1]# getfacl test
# file: test
# owner: root
# group: root
user::rwx
user:root:rwx
user:500:rwx
user:1004:r-x
user:nfsnobody:---
group::rwx
mask::rwx
other::rwx
default:user::rwx
default:user:root:rwx
default:user:500:rwx
default:user:1004:r-x
default:user:nfsnobody:---
default:group::rwx
default:mask::rwx
default:other::rwx

Target side:
drw-------  2 root     root           2 Apr  5 14:30 test123
              user:root:rw-p----------:-------:allow
               user:500:rw-p----------:-------:allow
              user:1004:r--p----------:-------:allow
             user:65534:--------------:-------:allow</pre>

</div>
<!-- EDIT2 SECTION "Sync Acl with EonNAS" [414-9982] -->
<h1 class="sectionedit3" id="sync_acl_with_syno">Sync Acl with Syno</h1>
<div class="level1">
<pre class="file">[rsync server]
[root@nas_8744965_a test]# rsync -aAX /Pool-1/Volume_1/share1/test/ admin@172.27.112.150::Test
Password:
rsync: ACLs are not supported on this server
rsync error: requested action not supported (code 4) at clientserver.c(1548) [Receiver=3.0.9]
rsync: read error: Connection reset by peer (104)
rsync error: error in rsync protocol data stream (code 12) at io.c(764) [sender=3.0.9]

[ssh protocol]
[root@nas_8744965_a test]# rsync -aAX /Pool-1/Volume_1/share1/test/ admin@172.27.112.150:/volume1/Test/
admin@172.27.112.150&#039;s password:
Could not chdir to home directory /var/services/homes/admin: No such file or directory
rsync: ACLs are not supported on this server
rsync error: syntax or usage error (code 1) at main.c(1786) [server=3.0.9]
rsync: connection unexpectedly closed (0 bytes received so far) [sender]
rsync error: error in rsync protocol data stream (code 12) at io.c(605) [sender=3.0.9]</pre>

<p>
Q : Sync Acl with QNAP (Source : GS, Target : QNAP)
</p>
<pre class="file">Command:
(ssh protocol) 
rsync -aAX /Pool-1/Volume_1/share1/test/ admin@172.27.112.154:/share/test002

(rsync server) 
rsync -aAX /Pool-1/Volume_1/share1/test/ admin@172.27.112.154::test002

A : sync acl permission
X : sync extended attribute

[ Without syncing acl ]
Source Side:
[root@nas_8744965_a test]# getfacl 01.gif
# file: 01.gif
# owner: 500
# group: users
user::rwx
user:root:rwx
user:500:rwx
user:1004:r-x
user:nfsnobody:---
group::rwx
mask::rwx
other::rwx

Target Side :
[/share] # getfacl test002/01.gif
# file: test002/01.gif
# owner: aaaaaaaa
# group: everyone
user::rwx
user:admin:rwx
user:guest:---
group::rwx
mask::rwx
other::rwx

[ Replicating with acl ]
Source Side:
[root@nas_8744965_a test]# getfacl 01.gif
# file: 01.gif
# owner: 500
# group: users
user::rwx
user:root:rwx
user:500:rwx
user:1004:r-x
user:nfsnobody:---
group::rwx
mask::rwx
other::rwx

Target Side :
[/share] # getfacl test002/01.gif
# file: test002/01.gif
# owner: aaaaaaaa
# group: everyone
user::rwx
user:admin:rwx
user:aaaaaaaa:rwx
user:member1:r-x
user:guest:---
group::rwx
mask::rwx
other::rwx</pre>
<pre class="file">Q : Why not define the role of EonNAS is third party?
Ans:
設計上會比較複雜, 因為舊的EonNAS:
1. 必須使用admin的帳密才可以備份ACL.
2. 因為如果選NAS的話, 在我們底下實際是用root在進行備份(透過ssh and login by it&#039;s key).
說穿了只是偷懶, 因為要做的話也可以做到.
首先選NAS的時候要判斷對方是不是GS/EonNAS,
如果是EonNAS的話就走user = admin, ssh protocol的路.
如果是GS的話就走user = root, ssh protocol的路.
(但是一個是solaris, 一個是linux, 兩邊的ACL真的可以完全sync到一致嗎?)</pre>
<pre class="file">Q : 現在GS -&gt; Third Party, 備份過去後的ACL會長什麼樣子?
Ans : 
1. target folder的owner跟group會被source的owner跟group蓋掉. (但其餘entry還在)
* target folder的原有acl entry不會被改變.

source :
drwxr-xr-x 2 aa1  users 45 Mar 21 11:16 source

target : 
drwxr-xr-x  2 1000     100            5 Mar 21 11:16 target
2. source folder裡面的file , owner跟group會過來, 但是acl entry不會過來.
source : 
-rw-rwxr--+ 1 aa1  aa1  4 Mar 21 11:16 file1
-rw-r--r--  1 aa2  root 4 Mar 21 11:16 file2
-rw-r--r--  1 root root 4 Mar 21 11:16 file3

target :
-rw-rwxr--  1 1000     1000           4 Mar 21 11:16 file1
-rw-r--r--  1 1001     root           4 Mar 21 11:16 file2
-rw-r--r--  1 root     root           4 Mar 21 11:16 file3

* solaris還有一些extended acl不會出來.
* file會繼承target folder的原有acl entry.
</pre>
<pre class="file">Q : GS -&gt; EonNAS , 可以做到ACL備份嗎?
Ans:
沒有辦法, 因為EonNAS的source code有被更改過, 只適用於EonNAS -&gt; EonNAS (--zfs-acl), 若只加上-A參數的話, 會變成:
source :
# file: source/file1
# owner: aa1
# group: aa1
user::rw-
user:aa2:rwx
group::r--
mask::rwx
other::r--

target : 
----------  1 1000     1000           4 Mar 21 11:16 file1
              user:1001:rw-p----------:-------:allow
</pre>

</div>
<!-- EDIT3 SECTION "Sync Acl with Syno" [9983-] -->